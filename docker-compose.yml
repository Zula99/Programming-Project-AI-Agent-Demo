services:
  # OpenSearch Service
  opensearch:
    image: opensearchproject/opensearch:2.14.0
    container_name: opensearch
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      - discovery.type=single-node
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=true
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend Service
  backend:
    build:
      context: ./ai-agent-demo-factory-backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./ai-agent-demo-factory-backend:/app
      - ./norconex_configs:/opt/norconex/configs:rw
      - ./norconex_data:/opt/norconex/data:ro
    depends_on:
      opensearch:
        condition: service_healthy
      norconex-cli-legacy:
        condition: service_started
    environment:
      OPENSEARCH_HOST: opensearch
      OPENSEARCH_PORT: 9200
      NORCONEX_MODE: "legacy"
    develop:
      watch:
        - action: sync+restart
          path: ./ai-agent-demo-factory-backend
          target: /app

  # React Frontend Service
  frontend:
    build:
      context: ./ai-agent-demo-factory-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./ai-agent-demo-factory-frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:5000
    develop:
      watch:
        - action: sync+restart
          path: ./ai-agent-demo-factory-frontend
          target: /app

  # Norconex CLI (Legacy Direct Distribution) Container
  norconex-cli-legacy:
    build:
      context: ./norconex
      dockerfile: Dockerfile
    volumes:
      - ./norconex_data:/opt/norconex/data:rw
      - ./norconex_configs:/opt/norconex/configs:rw
    healthcheck:
      test: ["CMD", "/usr/local/bin/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Define named volumes for persistent data storage
volumes:
  opensearch_data: {}